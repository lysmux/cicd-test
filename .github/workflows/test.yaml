name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ steps.setup-python.outputs.python-version }}
      cache-key: ${{ steps.cache-venv.outputs.cache-primary-key }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Load cached venv
        id: cache-venv
        uses: actions/cache/restore@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      # ==== Install dependencies if cache does not exists ====
      - name: Install Poetry
        if: steps.cache-venv.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: '2.1.3'
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Cache venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: .venv
          key: ${{ steps.cache-venv.outputs.cache-primary-key }}
      # ==== Install dependencies if cache does not exists ====

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Load cached venv
        uses: actions/cache/restore@v4
        with:
          path: .venv
          key: ${{ needs.setup.outputs.cache-key }}
      - name: Lint
        run: |
          .venv/bin/ruff check
          .venv/bin/ruff format --check

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Load cached venv
        uses: actions/cache/restore@v4
        with:
          path: .venv
          key: ${{ needs.setup.outputs.cache-key }}
      - name: Test
        run: |
          .venv/bin/pytest -v -s \
            --self-contained-html --html=pytest.html \
            --cov=./ --cov-report=html
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            pytest.html
            htmlcov/